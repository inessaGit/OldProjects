package KiplingTest;

import org.testng.annotations.Test;
import org.testng.annotations.BeforeMethod;
import org.testng.AssertJUnit;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.regex.Pattern;
import java.util.concurrent.TimeUnit;

import static org.hamcrest.CoreMatchers.*;

import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.Wait;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Reporter;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;
import org.testng.annotations.AfterTest;

import UtilClasses.CommonMethods;

public class KipCheckoutUSA {
	private WebDriver driver;
	private boolean acceptNextAlert = true;
	private StringBuffer verificationErrors = new StringBuffer();
	private WebDriverWait wait; 
	Actions action;

	KipCommonMethods kp= new KipCommonMethods();
	private boolean stagingTrue;
	private boolean devTrue;

	@BeforeSuite
	public void setUp() throws Exception {
		
		
		driver = new FirefoxDriver();
		wait = new WebDriverWait(driver,20);
		action = new Actions(driver);

		//File file=new File("/Users/igonzalez/Desktop/SELENIUM_jar/selenium/chromedriver");
		//System.setProperty("webdriver.chrome.driver", file.getAbsolutePath());
		//driver = new ChromeDriver();
		String url=KipCommonMethods.getUrl("baseUrl");
		driver.get(url);
	}
 
	@Test(priority=1)
	public void testAddToCart() throws Exception {

		Actions action = new Actions(driver);
		action.moveToElement(driver.findElement(By.id("nav-handbags"))).build().perform();

		driver.findElement(By.cssSelector("#handbags-new > span")).click();
		driver.findElement(By.xpath("//li[2]/div/div/a/img")).click();// li is image number in grid
		driver.findElement(By.id("add-to-cart")).click();

	}

	@Test (priority=2)
	public void testCartPage()
	{
		driver.findElement(By.xpath("//li[@id='mini-cart']/a")).click();
		KipCommonMethods.takeScreenshot(driver);
	}

	@Test (priority=3)
	public void testcheckoutInterceptPage()
	{
		driver.findElement(By.xpath("//button[@name='dwfrm_cart_checkoutCart']")).click();
		KipCommonMethods.takeScreenshot(driver);

		driver.findElement(By.name("dwfrm_login_unregistered")).click();
		wait.until(ExpectedConditions.presenceOfElementLocated(By.id("dwfrm_singleshipping_shippingAddress_addressFields_firstName")));

	}
	@Test (priority=4)
	public void testStep1Shipping()
	{
		wait.until(ExpectedConditions.presenceOfElementLocated(By.id("dwfrm_singleshipping_shippingAddress_addressFields_firstName")));

		driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_firstName")).clear();
		driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_firstName")).sendKeys("ines");
		driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_lastName")).clear();
		driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_lastName")).sendKeys("g");
		driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_address1")).clear();
		driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_address1")).sendKeys("5010 haven pl");
		driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_city")).clear();
		driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_city")).sendKeys("dubli");

		WebElement addressOption2 = driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_address2"));
		addressOption2.click();
		addressOption2.sendKeys("apt 665");
	}

	@Test (priority=6)
	public void testSelectReportState()
	{
		Select selectState= new Select(driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_states_state")));
		List<WebElement>allStates=selectState.getOptions();
		List<String> states= new ArrayList<String>();
		for(WebElement state: allStates)
		{
			String stateOption = state.getAttribute("innerHTML").trim();

			//  Reporter.log("This are the states in the state drop down: "+ stateOption);
			System.out.println ("This are the states in the state drop down: "+ stateOption);
			driver.findElement(By.xpath(".//*[@id='s2id_dwfrm_singleshipping_shippingAddress_addressFields_states_state']/a/div/b")).click();//THIS IS STATE toggle

			//html/body/div[8]/ul/li[6]/div
			stagingTrue = driver.getCurrentUrl().contains("staging");
			   
			System.out.println(stagingTrue);
			   devTrue = driver.getCurrentUrl().contains("development");

			   
			   if(stagingTrue==true|| devTrue==true)
			   {
				   WebElement stateDropDown = driver.findElement(By.xpath("//div[96]/ul/li[6]/div "));//STAGING XPATH
				    action.moveToElement(stateDropDown).click().build().perform();

			   }
			   
			   else if (stagingTrue!=true)
			   {
				    WebElement stateDropDown = driver.findElement(By.xpath("html/body/div[8]/ul/li[6]/div"));//production this is state drop down /or country because div[8] is for both
				    action.moveToElement(stateDropDown).click().build().perform();

			   }

			//waitToLoadElement (driver, By.xpath(".//*[@id='s2id_dwfrm_singleshipping_shippingAddress_addressFields_country']/a/span"), 5);//BECAUSE country defines 'State'/'Province'/State_Province
			try {
				AssertJUnit.assertEquals("State", driver.findElement(By.xpath("//form[@id='dwfrm_singleshipping_shippingAddress']/fieldset/div[4]/div[2]/label/span")).getText());
			} catch (Error e) {
				verificationErrors.append(e.toString());
			}
		}
	}
	@Test (priority=5)
	public  void testSelectReportCountry()
	{
		{
			Select selectCountry= new Select(driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_country")));

			List<WebElement>allCountries=selectCountry.getOptions();
			List<String> countries= new ArrayList<String>();
			for(WebElement country: allCountries)
			{
				String countryOption = country.getAttribute("innerHTML").trim();

				//  Reporter.log("This are the states in the state drop down: "+ stateOption);
				System.out.println ("This are the countries in the country drop down: "+ countryOption);

			}

			WebElement countryToggle=	driver.findElement(By.xpath(".//*[@id='s2id_dwfrm_singleshipping_shippingAddress_addressFields_country']/a/div/b"));
			countryToggle.click();
			

			// WebElement countrytDropDown = driver.findElement(By.xpath("html/body/div[8]/ul/li[2]/div"));//this is state drop down /or country because div[8] is for both
			//action.moveToElement(countrytDropDown).click().build().perform();

			
		}
	}
		
		@Test (priority=7)
		public void testZipCodeField()
		{

			driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_zip")).clear();
			driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_zip")).sendKeys("94568");

			// String stateOrProvince= driver.findElement(By.xpath(".//*[@id='dwfrm_singleshipping_shippingAddress']/fieldset/div[4]/div[3]/label/span")).getAttribute("innerHTML").trim();
			//System.out.println("After selecting country - " + stateOrProvince);
		}
		
		@Test (priority=8)
		public void testPhoneField()
		{

			driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_phone")).clear();
			driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_phone")).sendKeys("9255443344");
			//driver.findElement(By.id("shipping-method-2day_48_contiguous_states")).click();
			// driver.findElement(By.xpath("//div[@id='shipping-method-list']/fieldset/div/label")).click();

			
			}
		
		@Test (priority=9)
		public void testAddressOption()
		{
			WebDriverWait wait= new WebDriverWait( driver, 60);

			KipCommonMethods.takeScreenshot(driver);

			WebElement continueStep1 =driver.findElement(By.name("dwfrm_singleshipping_shippingAddress_save"));//continueStep1.
			continueStep1.click();//CONTINUE BUTTON

			/*
    xpath for 1st suggestion
    /html/body/div/div[2]/div/form/div[2]/table/tbody/tr[2]/td/input

    xpath for 2nd suggestion
    /html/body/div/div[2]/div/form/div[2]/table/tbody/tr[3]/td/input

			 */
			driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_address2")).click();
			//driver.findElement(By.name("dwfrm_singleshipping_shippingAddress_save")).click();

		}
		
		@Test (priority=10)
		public void startStep2Billing()
		{
            System.out.println("Starting on Step2:Billing");
            Reporter.log("Starting on Step2:Billing");

		}
		
		@Test (priority=11)
		public void testEmailOnBillingPage()
		{
			//waitToLoadElement(driver, By.xpath(".//*[@id='dwfrm_billing']/fieldset[1]/legend"), 5);
			//driver.findElement(By.id("toggleShippingAddress")).click();
			//driver.findElement(By.id("useShipping")).click();
			//  driver.findElement(By.id("toggleShippingAddress")).click();
			// driver.findElement(By.id("useShipping")).click();
			WebElement emailField = driver.findElement(By.id("dwfrm_billing_billingAddress_email_emailAddress"));
			Actions action= new Actions(driver);
			
			action.moveToElement(emailField).click().build().perform();
			emailField.clear();
			emailField.sendKeys("software_test22@hotmail.com");

			//driver.findElement(By.id("dwfrm_billing_billingAddress_addToEmailList")).click(); //not visible because it is input need to be label

			driver.findElement(By.xpath("//form[@id='dwfrm_billing']/fieldset/div[8]/div[2]/label")).click();// this is to uncheck add me to email list

		}
		@Test (priority=12)
		
		public void testCreditCardType()
		{
			driver.findElement(By.xpath("//div[@id='s2id_dwfrm_billing_paymentMethods_creditCard_type']/a/div/b")).click();//credit card type toggle
			WebElement cardType = driver.findElement(By.xpath("html/body/div[8]/ul/li[2]/div")); //Visa
			Actions action =new Actions(driver);
			action.moveToElement(cardType).click().build().perform();

		}
		@Test (priority=13)
		public void testCreditCardMonth()
		{
			driver.findElement(By.xpath(".//*[@id='s2id_dwfrm_billing_paymentMethods_creditCard_month']/a/div/b")).click();//credit card month toggle
			WebElement cardMonth=driver.findElement(By.xpath("html/body/div[8]/ul/li[4]/div"));
			Actions action =new Actions(driver);

			action.moveToElement(cardMonth).click().build().perform();
		}
		
		@Test (priority=14)
		public void testCreditCardYear()
		{
			Actions action =new Actions(driver);


			driver.findElement(By.xpath(".//*[@id='s2id_dwfrm_billing_paymentMethods_creditCard_year']/a/div/b")).click();//credit card year toggle
			WebElement cardYear = driver.findElement(By.xpath("html/body/div[8]/ul/li[6]/div"));
			action.moveToElement(cardYear).click().build().perform();
		}
		
		@Test (priority=15)
		public void testCreditCardOwner(){

			driver.findElement(By.id("dwfrm_billing_paymentMethods_creditCard_owner")).clear();
			driver.findElement(By.id("dwfrm_billing_paymentMethods_creditCard_owner")).sendKeys("ines");
			
		}
		
		@Test (priority=16)
		
		public void testCreditCardNumber()
		{
			driver.findElement(By.id("dwfrm_billing_paymentMethods_creditCard_number")).clear();
			driver.findElement(By.id("dwfrm_billing_paymentMethods_creditCard_number")).sendKeys("4111111111111111");
			
		}
		
		@Test (priority=17)
		public void testCreditCardCvn()
		{
			driver.findElement(By.id("dwfrm_billing_paymentMethods_creditCard_cvn")).clear();
			driver.findElement(By.id("dwfrm_billing_paymentMethods_creditCard_cvn")).sendKeys("111");
			KipCommonMethods.takeScreenshot(driver);


		}
		
		@Test (priority=18)
		public void startStep3()
		{
			driver.findElement(By.cssSelector("button[name=\"dwfrm_billing_save\"]")).click();// continue button on Step2  Billing page
			
			wait.until(ExpectedConditions.presenceOfElementLocated(By.className("order-summary-title")));

			String step3Url= driver.getCurrentUrl();
			System.out.println("After click on 'Continue' button on 'Step2: Billing' got redirected to " + step3Url);
			Reporter.log("After click on 'Continue' button on 'Step2: Billing' got redirected to " + step3Url);

			//.//*[@id='cart-order-summary']/h2
			try {
				Reporter.log("On Step3 page "+ driver.findElement(By.cssSelector("tr.order-total > td.totLabel")).getText()+" is visible");
				System.out.println("On Step3 page element "+ driver.findElement(By.cssSelector("tr.order-total > td.totLabel")).getText()+" is visible");

				AssertJUnit.assertEquals("Order Total:", driver.findElement(By.cssSelector("tr.order-total > td.totLabel")).getText());
			} catch (Error e) {
				verificationErrors.append(e.toString());
			}
			try {
				Reporter.log ("Currently on " + (driver.findElement(By.xpath(".//*[@id='cart-order-summary']/h2")).getText())+ "page");
				AssertJUnit.assertTrue(CommonMethods.isElementPresent(driver, By.xpath("//div[@id='primary']/div[2]/div/table/tbody/tr[5]/td[2]")));
			} catch (Error e) {
				verificationErrors.append(e.toString());
			}

		}
			@Test (priority=19)
			public void testCheckoutConfirmation()
			{

			driver.findElement(By.name("submit")).click();//Step 3 PlACE ORDER - SUBMIT BUTTON 

			KipCommonMethods.defaultWindowSize(driver);
			AssertJUnit.assertEquals("Checkout Confirmation", driver.getTitle());
			System.out.println("On Checkout Confirmation page -page title is "+ driver.getTitle());
			Reporter.log("On Checkout Confirmation page -page title is "+ driver.getTitle());
			KipCommonMethods.takeScreenshot(driver);

			//order confirmation page order number

			String orderNumber = driver.findElement(By.xpath(".//*[@id='primary']/div[2]/table[1]/tbody/tr[2]/td[1]/div[2]/span[2]")).getText();
			Reporter.log("On 'Order Confirmation' page order number is " + orderNumber);
			System.out.println("On 'Order Confirmation' page order number is " + orderNumber);
			try {
				KipCommonMethods.sendOrderNumToFile(driver, orderNumber);
			} catch (IOException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}

			//order confirmation order total 
			String orderTotal = driver.findElement(By.xpath(".//*[@id='primary']/div[2]/table[1]/tbody/tr[2]/td[4]/div/table/tbody/tr[6]/td[2]")).getText();
			Reporter.log("On 'Order Confirmation' page order total is "+ orderTotal);
			System.out.println("On 'Order Confirmation' page order total is "+ orderTotal);

			//order confirmation sales tax
			String orderTax = driver.findElement(By.xpath(".//*[@id='primary']/div[2]/table[1]/tbody/tr[2]/td[4]/div/table/tbody/tr[4]/td[2]")).getText();
			Reporter.log("On 'Order Confrimation' page sales tax is "+ orderTax);
			System.out.println("On 'Order Confrimation' page sales tax is "+ orderTax);

			//order confirmation page subtotal

			String subtotal = driver.findElement(By.xpath(".//*[@id='primary']/div[2]/table[1]/tbody/tr[2]/td[4]/div/table/tbody/tr[1]/td[2]")).getText();
			Reporter.log("On 'Order Confirmation' page subtotal is "+ subtotal);
			System.out.println("On 'Order Confirmation' page subtotal is "+ subtotal);

			//order confirmation page shippingPrice
			String shippingPrice = driver.findElement(By.xpath(".//*[@id='primary']/div[2]/table[1]/tbody/tr[2]/td[4]/div/table/tbody/tr[2]/td[2]")).getText();
			Reporter.log("On 'Order Confirmation' page shipping price is "+ shippingPrice);
			System.out.println("On 'Order Confirmation' page shipping price is "+ shippingPrice);

			//order confirmation page address
			String address= driver.findElement(By.cssSelector("address")).getText();
			Reporter.log("On 'Order Confirmation' page address is " +address);
			System.out.println("On 'Order Confirmation' page address is " +address);

			//order confirmation page shipping method 
			try {
				AssertJUnit.assertEquals("Shipping Ground", driver.findElement(By.cssSelector("tr.order-shipping > td.totLabel")).getText());
			} catch (Error e) {
				verificationErrors.append(e.toString());
			}
		}

		@AfterSuite
		public  void endTest()
		{
			//driver.quit();

		}
	}
