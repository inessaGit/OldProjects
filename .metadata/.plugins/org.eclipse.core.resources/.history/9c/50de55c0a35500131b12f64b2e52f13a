
import java.util.regex.Pattern;
import java.util.concurrent.TimeUnit;

import org.junit.*;

import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.*;

import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.*;
import org.testng.annotations.Test;

import UtilClasses.KipCommonMethods;

public class CheckoutCanada {
  private WebDriver driver;
  private String baseUrl;
  private boolean acceptNextAlert = true;
  private StringBuffer verificationErrors = new StringBuffer();

  @BeforeTest
  public void setUp() throws Exception {
    driver = new FirefoxDriver();
    baseUrl = "http://development.spwrealm.vfc.demandware.net/";
    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
  }

  @Test
  public void testCheckOutCanda() throws Exception {
    driver.get(baseUrl + "/on/demandware.store/Sites-kip-Site/default/Home-Show");
    
    KipCommonMethods.backpacksSubcategory(driver);
    KipCommonMethods.backpacksPDP(driver);
    
    driver.findElement(By.id("add-to-cart")).click();
    
    driver.findElement(By.cssSelector("a.cartLink.ignore")).click();//THIS IS MINI CART ON PDP LINK

    //driver.findElement(By.linkText("Checkout")).click();//THIS IS A LINK ON HOVER IN MINI CART 
    driver.findElement(By.name("dwfrm_cart_checkoutCart")).click();
    driver.findElement(By.name("dwfrm_login_unregistered")).click();
    driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_firstName")).clear();
    driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_firstName")).sendKeys("i");
    driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_lastName")).clear();
    driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_lastName")).sendKeys("g");
    driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_address1")).clear();
    driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_address1")).sendKeys("6810 Main Street");
    
    
    WebElement countryDrop = driver.findElement(By.cssSelector("a.select2-choice.select2-default > span"));

    countryDrop.click();
    //Select(driver.findElement(By.id("gender")).selectByVisibleText("Canada");
    driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_city")).clear();
    driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_city")).sendKeys("vancouver");
    driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_zip")).clear();
    driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_zip")).sendKeys("V5X 0A1");
    driver.findElement(By.id("shipping-method-ClearPath_FEDEX_ECONOMY")).click();
    try {
      assertEquals("FedEx Economy: $21.47", driver.findElement(By.xpath("//div[@id='shipping-method-list']/fieldset/div/label")).getText());
    } catch (Error e) {
      verificationErrors.append(e.toString());
    }
    driver.findElement(By.id("shipping-method-ClearPath_FEDEX_ECONOMY")).click();
    driver.findElement(By.name("dwfrm_singleshipping_shippingAddress_save")).click();
    assertEquals("Please enter a Telephone Number", driver.findElement(By.xpath("//form[@id='dwfrm_singleshipping_shippingAddress']/fieldset/div[5]/div/span[2]")).getText());
    driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_phone")).clear();
    driver.findElement(By.id("dwfrm_singleshipping_shippingAddress_addressFields_phone")).sendKeys("9253334455");
    driver.findElement(By.name("dwfrm_singleshipping_shippingAddress_save")).click();
    driver.findElement(By.cssSelector("#s2id_dwfrm_billing_paymentMethods_creditCard_type > a.select2-choice > span")).click();
    driver.findElement(By.cssSelector("#s2id_dwfrm_billing_paymentMethods_creditCard_year > a.select2-choice > div > b")).click();
    driver.findElement(By.id("dwfrm_billing_paymentMethods_creditCard_owner")).clear();
    driver.findElement(By.id("dwfrm_billing_paymentMethods_creditCard_owner")).sendKeys("i");
    driver.findElement(By.id("dwfrm_billing_paymentMethods_creditCard_number")).clear();
    driver.findElement(By.id("dwfrm_billing_paymentMethods_creditCard_number")).sendKeys("4111111111111111");
    driver.findElement(By.id("dwfrm_billing_paymentMethods_creditCard_cvn")).clear();
    driver.findElement(By.id("dwfrm_billing_paymentMethods_creditCard_cvn")).sendKeys("111");
    driver.findElement(By.cssSelector("button[name=\"dwfrm_billing_save\"]")).click();
    driver.findElement(By.id("dwfrm_billing_billingAddress_email_emailAddress")).clear();
    driver.findElement(By.id("dwfrm_billing_billingAddress_email_emailAddress")).sendKeys("software_test22@hotmail.com");
    driver.findElement(By.id("dwfrm_billing_billingAddress_addToEmailList")).click();
    driver.findElement(By.xpath("//form[@id='dwfrm_billing']/fieldset/div[7]/div[2]/label")).click();
    driver.findElement(By.cssSelector("button[name=\"dwfrm_billing_save\"]")).click();
    driver.findElement(By.name("submit")).click();
    String orderNum = driver.findElement(By.cssSelector("div.order-number. > span.value")).getText();
    String  address= driver.findElement(By.cssSelector("address")).getText();
    driver.findElement(By.linkText("Sign in / Sign up")).click();
    driver.findElement(By.id("dwfrm_ordertrack_orderNumber")).clear();
    driver.findElement(By.id("dwfrm_ordertrack_orderNumber")).sendKeys(orderNum);
    driver.findElement(By.id("dwfrm_ordertrack_postalCode")).clear();
    driver.findElement(By.id("dwfrm_ordertrack_postalCode")).sendKeys("V5X 0A1");
    driver.findElement(By.name("dwfrm_ordertrack_findorder")).click();
  }

  @AfterTest
  public void tearDown() throws Exception {
    driver.quit();
    String verificationErrorString = verificationErrors.toString();
    if (!"".equals(verificationErrorString)) {
      fail(verificationErrorString);
    }
  }

  private boolean isElementPresent(By by) {
    try {
      driver.findElement(by);
      return true;
    } catch (NoSuchElementException e) {
      return false;
    }
  }

  private boolean isAlertPresent() {
    try {
      driver.switchTo().alert();
      return true;
    } catch (NoAlertPresentException e) {
      return false;
    }
  }

  private String closeAlertAndGetItsText() {
    try {
      Alert alert = driver.switchTo().alert();
      String alertText = alert.getText();
      if (acceptNextAlert) {
        alert.accept();
      } else {
        alert.dismiss();
      }
      return alertText;
    } finally {
      acceptNextAlert = true;
    }
  }
}
